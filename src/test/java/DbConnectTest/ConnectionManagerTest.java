package DbConnectTest;

import static org.junit.Assert.assertEquals;

import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import DbConnect.ConnectionManager;
import DbConnect.EventBroker;

public class ConnectionManagerTest {
	
	private static final String FILE = "/dbparam.txt";
	private static String driver;
	private static String url;
	private static String user;
	private static String password;
	private static Connection con;

	@BeforeClass //wird vor den Test ausgeführt
	public static void setUpBeforeClass() throws Exception {
	}

	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Before //wird vor JEDEM Test ausgeführt
	public void setUp() throws Exception {
	
	}

	@After
	public void tearDown() throws Exception {
	}

	@Test
	public void init() {
		
		
		
		
		//String strdrv = p.getProperty("driver");
//		assertEquals(strdrv, "org.hsqldb.jdbc.JDBCDriver");
		
	//	driver = p.getProperty("driver");
	//	url = p.getProperty("url");
	//	user = p.getProperty("user");
	//	password = p.getProperty("password");
		
		
	}
	
	@Test
	public void testConnection1() throws ClassNotFoundException, IOException, SQLException {
		Connection conM = ConnectionManager.getConnection("dbparam-test.txt");
		
		Statement stmt = conM.createStatement();
		stmt.execute("CREATE TABLE TEST_TBL_EVENT"
				+ "(ID_EVENT INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) NOT NULL," 
				+ "TXT_EVENTNAME VARCHAR(30) NOT NULL,TXT_EVENTDATE VARCHAR(10),PRIMARY KEY (ID_EVENT))");
		
		EventBroker eb = EventBroker.getInstance();
		
		insertEvent();
	}
	
	

}
